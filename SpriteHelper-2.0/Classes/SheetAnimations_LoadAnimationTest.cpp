//
//  SheetAnimations_LoadAnimationTest.cpp
//  SpriteHelper2-TestCases
//
//  Created by Bogdan Vladu on 5/22/13.
//
//

#include "SheetAnimations_LoadAnimationTest.h"
#include "HelloWorldScene.h"
#include "GameDevHelper.h"
using namespace cocos2d;

SheetAnimations_LoadAnimationTest::~SheetAnimations_LoadAnimationTest()
{
	// cpp don't need to call super dealloc
	// virtual destructor will do this
}

SheetAnimations_LoadAnimationTest::SheetAnimations_LoadAnimationTest()
{
}

CCScene* SheetAnimations_LoadAnimationTest::scene()
{
	CCScene * scene = NULL;
	do
	{
		// 'scene' is an autorelease object
		scene = CCScene::create();
		CC_BREAK_IF(! scene);
        
		// 'layer' is an autorelease object
		SheetAnimations_LoadAnimationTest *layer = SheetAnimations_LoadAnimationTest::create();
		CC_BREAK_IF(! layer);
        
		// add layer as a child to scene
		scene->addChild(layer);
	} while (0);
    
	// return the scene
	return scene;
}

std::string SheetAnimations_LoadAnimationTest::initTest()
{
    
    CCSize s = CCDirector::sharedDirector()->getWinSize();
    
#if 1
    // Use batch node. Faster
    //when using batches - load a batch node using the generated image
    batchNodeParent = CCSpriteBatchNode::create("spriteSheetAnimationsTest_Numbers.png", 100);
    this->addChild(batchNodeParent, 0);
#endif
    
    
    //load into the sprite frame cache the plist generated by SH
    CCSpriteFrameCache::sharedSpriteFrameCache()->addSpriteFramesWithFile("spriteSheetAnimationsTest_Numbers.plist");
    
    //multiple animations in this document so lets cache all the sheets
    //not necessary - but if we dont do this we will have a warning in the console
    CCSpriteFrameCache::sharedSpriteFrameCache()->addSpriteFramesWithFile("spriteSheetAnimationsTest_robotBlinking.plist");
    
    
    CCAnimationCache *cache = CCAnimationCache::sharedAnimationCache();
    cache->addAnimationsWithFile("spriteSheetAnimationsTest_SheetAnimations.plist");//the animation exported plist file

    
    //load into the sprite frame cache the plist generated by SH
    CCSpriteFrameCache::sharedSpriteFrameCache()->addSpriteFramesWithFile("loadSprites_spritesSheet.plist");
    
    this->executeTestCodeAtPosition(ccp(s.width/2, s.height/2));
    
    return "Tap screen to create sprites";
}

void SheetAnimations_LoadAnimationTest::executeTestCodeAtPosition(CCPoint p)
{
    
    GHSprite * sprite = GHSprite::createWithSpriteFrameName("number_0.png");//the name of one of the sprite in the sheet plist
    
    if(batchNodeParent != NULL){//if we use batch nodes we must add the sprite to its batch parent
        batchNodeParent->addChild(sprite);
    }
    else{//if we dont use batch nodes then we must add the sprite to a normal node - e.g the layer or another node
        this->addChild(sprite);
    }
    sprite->setPosition(p);
    
    
    CCAnimationCache *cache = CCAnimationCache::sharedAnimationCache();
    CCAnimation *animation = cache->animationByName("NumbersAnim");//the name of the animation
    
    CCAnimate* action = CCAnimate::create(animation);
    sprite->runAction(action);
    
    
    //    [sprite runAction: [CCSequence actions: action, [action reverse], nil]];
    

    CCNotificationCenter::sharedNotificationCenter()->addObserver(this,
                                                                  callfuncO_selector(SheetAnimations_LoadAnimationTest::animationFrameNotification),
                                                                  CCAnimationFrameDisplayedNotification,
                                                                  NULL);
}

void SheetAnimations_LoadAnimationTest::animationFrameNotification(CCObject* object)
{
    CCLog("ANIMATION NOTIFICATION ON FRAME CHANGE");
    //COCOS2d-x does not call this notification yet - looking in CCActionInterval.cpp line 2429 we have this comment
    //TODO: [[NSNotificationCenter defaultCenter] postNotificationName:CCAnimationFrameDisplayedNotification object:target_ userInfo:dict];
    
}
