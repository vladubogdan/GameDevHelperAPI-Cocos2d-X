//
//  Sprites_LoadSpriteFromPNGTest.cpp
//  SpriteHelper2-TestCases
//
//  Created by Bogdan Vladu on 5/22/13.
//
//

#include "Sprites_LoadSpriteFromPNGTest.h"
#include "HelloWorldScene.h"

using namespace cocos2d;

Sprites_LoadSpritesFromPNGTest::~Sprites_LoadSpritesFromPNGTest()
{
	// cpp don't need to call super dealloc
	// virtual destructor will do this
}

Sprites_LoadSpritesFromPNGTest::Sprites_LoadSpritesFromPNGTest()
{
}

CCScene* Sprites_LoadSpritesFromPNGTest::scene()
{
	CCScene * scene = NULL;
	do
	{
		// 'scene' is an autorelease object
		scene = CCScene::create();
		CC_BREAK_IF(! scene);
        
		// 'layer' is an autorelease object
		Sprites_LoadSpritesFromPNGTest *layer = Sprites_LoadSpritesFromPNGTest::create();
		CC_BREAK_IF(! layer);
        
		// add layer as a child to scene
		scene->addChild(layer);
	} while (0);
    
	// return the scene
	return scene;
}

std::string Sprites_LoadSpritesFromPNGTest::initTest()
{
    
    CCSize s = CCDirector::sharedDirector()->getWinSize();
    
#if 1
    // Use batch node. Faster
    //when using batches - load a batch node using the generated image
    batchNodeParent = CCSpriteBatchNode::create("loadSprites_spritesSheet.png", 100);
    this->addChild(batchNodeParent, 0);
#endif
    
    
    //load into the sprite frame cache the plist generated by SH
    CCSpriteFrameCache::sharedSpriteFrameCache()->addSpriteFramesWithFile("loadSprites_spritesSheet.plist");
    
    this->executeTestCodeAtPosition(ccp(s.width/2, s.height/2));
    
    return "Tap screen to create sprites";
}

void Sprites_LoadSpritesFromPNGTest::executeTestCodeAtPosition(CCPoint p)
{
    std::vector<std::string> spriteFrameNames;
    spriteFrameNames.push_back("backpack");
    spriteFrameNames.push_back("banana");
    spriteFrameNames.push_back("bananabunch");
    spriteFrameNames.push_back("canteen");
    spriteFrameNames.push_back("hat");
    spriteFrameNames.push_back("pineapple");
    spriteFrameNames.push_back("statue");
    
    int spriteNameIdx = arc4random() % spriteFrameNames.size();
    
    std::string sprFrameName = spriteFrameNames[spriteNameIdx];
    
    //if you want to load color, opacity and other properties set on sprites inside SH
    //you must use a GHSprite to do that.
    //GHSprite is a subclass of CCSprite that adds some helper methods
    //GHSprite* newSpr = [GHSprite spriteWithSpriteFrameName:sprFrameName];
    CCSprite* newSpr = CCSprite::createWithSpriteFrameName(sprFrameName.c_str());
    
    
    //else you can also use a CCSprite
    //    CCSprite* newSpr = [CCSprite spriteWithSpriteFrameName:sprFrameName];
    
    newSpr->setPosition(p);
    
    if(batchNodeParent != NULL){//if we use batch nodes we must add the sprite to its batch parent
        batchNodeParent->addChild(newSpr);
    }
    else{//if we dont use batch nodes then we must add the sprite to a normal node - e.g the layer or another node
        this->addChild(newSpr);
    }
}
